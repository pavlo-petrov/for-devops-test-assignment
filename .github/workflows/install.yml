name: wordpress

on:
  push:
    branches: [ "main" ]
    paths: [ 'frontend/**' ]
  
  workflow_dispatch:

env: 
  cloud_region: eu-west-1
  packer-file: ./infra/packer/frontend/frontend.pkr.hcl
  ami-prefics: wordpress-prod-
  docker-file: /docker/Dockerfile

jobs:
################################# docker front part ##################################
  build_docker_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ env.cloud_region }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Outputs 
        run: terraform output

      - name: Extract RDS endpoint
        id: rds-endpoint
        run: echo "::set-output name=rds_endpoint::$(terraform output -raw rds_endpoint)"
        

      - name: Fetch MySQL secrets from AWS Secrets Manager
        id: secrets
      
        run: |
          export RDS_ENDPOINT=${{ steps.rds-endpoint.outputs.rds_endpoint }}
          NEXT_PUBLIC_SUPABASE_URL=$(aws secretsmanager get-secret-value --secret-id SupaBaseCredentials --query SecretString --output text | jq -r '.NEXT_PUBLIC_SUPABASE_URL')
          NEXT_PUBLIC_SUPABASE_ANON_KEY=$(aws secretsmanager get-secret-value --secret-id SupaBaseCredentials --query SecretString --output text | jq -r '.NEXT_PUBLIC_SUPABASE_ANON_KEY')
          echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY" >> $GITHUB_ENV
          
          MYSQL_PASSWORD_KEY=$(aws secretsmanager get-secret-value --secret-id test_mysql_pass --query SecretString --output text | jq -r '.MYSQL_PASSWORD_KEY')
          echo "MYSQL_PASSWORD_KEY=$MYSQL_PASSWORD_KEY" >> $GITHUB_ENV
          echo "RDS_ENDPOINT=$RDS_ENDPOINT" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


          
      - name: Build and push Docker image
        run: |
          docker build --build-arg NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY -t footballaws1/frontend:0.1 -f ${{ env.docker-file }} .
          docker push footballaws1/frontend:0.1
